Old fly checks incase I need them lol:




			// Fly/B = Checks for vertical Fly
			// Fly/G damn near renders this check usesless but I'm not removing it incase mojong become more useless and removes shit that it depends on, it also false flags
			if(config.modules.flyB.enabled && !player.isFlying && !player.hasTag("op") && !player.hasTag("nofly") && !player.hasTag("damaged") && !player.getEffect("jump_boost") && !player.hasTag("slime")) {

				const hVelocity = Math.abs((playerVelocity.x + playerVelocity.z) / 2);
				const yVelocity = playerVelocity.y;
				if(aroundAir(player) === true && playerVelocity.y > config.modules.flyB.minVelocity && hVelocity < config.modules.flyB.MaxHVelocity && !player.hasTag("op") && !player.isJumping && !player.hasTag("gliding") && !player.hasTag("attacked") && !player.hasTag("riding") && !player.hasTag("levitating") && player.hasTag("moving") && !player.getEffect("speed") && yVelocity > 1.0) {
					flag(player, "Fly", "B", "Movement", "yVelocity", Math.abs(playerVelocity.y), false);
				} 
			}

			// Fly C = Checks for having invalid velocity while in the air
			if (config.modules.flyC.enabled && !player.hasTag("op") && !player.isFlying && !player.hasTag("ground") && !player.isJumping && !player.hasTag("nofly") && !player.hasTag("damaged")) {
				const vertical_velo = playerVelocity.y;
				if(playerSpeed > 0.1 && vertical_velo === 0 && !player.hasTag("ground") && playerSpeed > config.modules.speedA.speed - 0.1 && aroundAir(player) && !player.getEffect("speed")) {
					flag(player, "Fly", "C", "Movement", "vertical", vertical_velo, true)
					currentVL++;
				}
			}

			//Fly/D = Checks for fly like velocity
			// This check is really scuffed because when I made it (in my old anticheat) I had no idea what I was talking about, but it works for some reason...
			if(config.modules.flyD.enabled && !player.hasTag("op") && !player.isFlying && !player.hasTag("nofly") && !player.hasTag("damaged") && !player.hasTag("slime")) {
				const makeYVelocity1 = Math.abs(playerVelocity.x + playerVelocity.z)
				const yVelocity = Math.abs(makeYVelocity1 / 2)
				if(playerVelocity.y > yVelocity && playerVelocity.x > config.modules.flyD.Velocity && aroundAir(player) && !player.getEffect("speed")) {
					if(!player.isJumping || player.hasTag("sneak") || player.isSneaking) {
						flag(player, "Fly", "D", "Movement", "velocity", Math.abs(playerVelocity.y).toFixed(4), true);
					}
				}
			}

			// Fly/E = Checks for being in air but not falling
			if(config.modules.flyE.enabled && !player.isFlying && !player.hasTag("op") && !player.hasTag("nofly") && !player.hasTag("damaged") && !player.hasTag("ground")) {
				if(playerVelocity.y === 0) {
					const findHVelocity = Math.abs((playerVelocity.x + playerVelocity.z) / 2);
					
					if(aroundAir(player) === true && findHVelocity > config.modules.flyE.hVelocity && !player.getEffect("speed")) {
						if(!player.isJumping || player.hasTag("sneak") || player.isSneaking) {
							flag(player, "Fly", "E", "Movement", "yVelocity", Math.abs(player.velocityV).toFixed(4), true);
							player.addTag("strict");
						}
					}          
				}
			}




                    "flyA": {
            "enabled": true,
            "punishment": "kick",
            "punishmentLength": "5m",
            "minVlbeforePunishment": 10
        },    
        "flyB": {
            "enabled": true,
            "description":"Checks for invalid vertical velocity",
            "minVelocity": 0.53234201,
            "punishment": "none",
            "MaxHVelocity": 0.5234,
            "minVlbeforePunishment": 0
        },
        "flyC": {
            "enabled": true,
            "velocity": 0.5423,
            "description":"Checks for invalid speed and velocity in air",
            "hVelocity": 0.525,
            "punishment": "kick",
            "punishmentLength": "5m",
            "minVlbeforePunishment": 3
        },          
        "flyD": {
            "enabled": true,
            "Velocity": 0.6,
            "description":"Checks for invalid horizontal velocity in air",
            "punishment": "kick",
            "punishmentLength": "5m",
            "minVlbeforePunishment": 5
        },    
        "flyE": {
            "enabled": true,
            "description":"Checks for invalid horizontal velocity in air",
            "hVelocity": 0.512,
            "punishment": "kick",
            "punishmentLength": "5d",
            "minVlbeforePunishment": 10
        },        

        // Do **NOT** enabled
        // The check is broken
        "flyF": {
            "enabled": true,
            "description": "In air velocity check",
            "punishment": "kick", 
            "diff": 0.1,
            "speed": 2.45,
            "punishmentLength": "3d",
            "minVlbeforePunishment": 10
        },   
        // This scythe check is so very fucking shit it annoys the piss out of me.
        "flyG": {
            "enabled": true,
            "description": "Checks for invalid Y movements (Scythe Check So Bad)",
            "fallDistance": 0,
            "punishment": "kick",
            "punishmentLength": "1m",
            "minVlbeforePunishment": 100
        },
